{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","protoTypes","PropTypes","string","ContactForm","state","name","number","hundleChange","e","currentTarget","value","setState","hundleSubmit","preventDefault","props","onSubmit","reset","this","LableName","InputForm","placeholder","type","onChange","pattern","title","required","ButtonContactForm","Component","ContactList","contacts","onDeleteContact","map","id","ContactListItem","ContactListButton","onClick","arrayOf","shape","isRequired","Filter","LableFilter","InputFilter","Title","App","filter","formSubmitHandler","data","addContact","nanoid","find","contact","alert","getVisibleContactList","normalizedFilter","toLowerCase","includes","deleteContactList","contactId","prevState","changeFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4405b369.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LableFilter\":\"Filter_LableFilter__2aXAq\",\"InputFilter\":\"Filter_InputFilter__25Wq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__37Lh-\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.Container}>{children}</div>;\r\n};\r\n\r\nContainer.protoTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  hundleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  hundleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.hundleSubmit}>\r\n        <label className={s.LableName}>\r\n          Name\r\n          <input\r\n            className={s.InputForm}\r\n            placeholder=\"Ivan Petrov\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.hundleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.LableName}>\r\n          Number\r\n          <input\r\n            className={s.InputForm}\r\n            placeholder=\"111-11-11\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.hundleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.ButtonContactForm} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.ContactListItem} key={id}>\r\n        <p className={s.ContactList}>\r\n          {name}: {number}\r\n        </p>\r\n        <button\r\n          className={s.ContactListButton}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.protoTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.LableFilter}>\r\n    Find contacts by name\r\n    <input\r\n      className={s.InputFilter}\r\n      placeholder=\"Ivan Petrov\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.protoTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport 'modern-normalize/modern-normalize.css';\nimport './App.css';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst Title = ['Title'];\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const { contacts } = this.state;\n    const addContact = {\n      id: nanoid(),\n      name: data.name,\n      number: data.number,\n    };\n    if (contacts.find(contact => contact.name === addContact.name)) {\n      alert(`${addContact.name} уже есть`);\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [addContact, ...contacts],\n    }));\n  };\n\n  getVisibleContactList = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContactList = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <Container>\n        <h1 className={Title}>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2 className={Title}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getVisibleContactList()}\n          onDeleteContact={this.deleteContactList}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LableName\":\"ContactForm_LableName__22Kxz\",\"InputForm\":\"ContactForm_InputForm__2xwSZ\",\"ButtonContactForm\":\"ContactForm_ButtonContactForm__1Q8lv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListItem\":\"ContactList_ContactListItem__3crlC\",\"ContactListButton\":\"ContactList_ContactListButton__1fHNA\",\"ContactList\":\"ContactList_ContactList__3imVL\"};"],"sourceRoot":""}